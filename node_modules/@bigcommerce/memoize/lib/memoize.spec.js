"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var memoize_1 = tslib_1.__importDefault(require("./memoize"));
describe('memoize', function () {
    it('only calls function again if parameters are different', function () {
        var add = jest.fn(function (a, b) { return (a + b); });
        var memoizedAdd = memoize_1.default(add);
        memoizedAdd(1, 1);
        memoizedAdd(1, 1);
        expect(add).toHaveBeenCalledTimes(1);
        memoizedAdd(2, 2);
        expect(add).toHaveBeenCalledTimes(2);
    });
    it('deletes cached result when key expires', function () {
        var add = jest.fn(function (a, b) { return (a + b); });
        var memoizedAdd = memoize_1.default(add, { maxSize: 1 });
        var cache = memoizedAdd.cache;
        memoizedAdd(1, 1);
        expect(cache.values().next().value)
            .toEqual(2);
        expect(Array.from(cache.values()).length)
            .toEqual(1);
        // This call should remove the previous result from the cache
        memoizedAdd(2, 2);
        expect(cache.values().next().value)
            .toEqual(4);
        expect(Array.from(cache.values()).length)
            .toEqual(1);
    });
});
//# sourceMappingURL=memoize.spec.js.map