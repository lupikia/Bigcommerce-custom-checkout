{"version":3,"file":"readable-data-store.js","sourceRoot":"","sources":["../src/readable-data-store.ts"],"names":[],"mappings":"","sourcesContent":["\nexport default interface ReadableDataStore<TTransformedState> {\n    getState(): TTransformedState;\n    subscribe(\n        subscriber: Subscriber<TTransformedState>,\n        ...filters: Array<Filter<TTransformedState>>\n    ): Unsubscriber;\n    subscribe(\n        subscriber: Subscriber<TTransformedState>,\n        options: SubscribeOptions<TTransformedState>\n    ): Unsubscriber;\n}\n\nexport type Filter<TState> = (state: TState) => any;\n\nexport type Subscriber<TState> = (state: TState) => void;\n\nexport type Unsubscriber = () => void;\n\nexport interface SubscribeOptions<TTransformedState> {\n    filters?: Array<Filter<TTransformedState>>;\n    initial?: boolean;\n}\n"]}