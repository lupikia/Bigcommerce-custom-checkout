"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var lodash_1 = require("lodash");
var shallowEqual = require("shallowequal");
function deepFreeze(object, options) {
    try {
        var _a = options || {}, _b = _a.equalityCheck, equalityCheck_1 = _b === void 0 ? shallowEqual : _b, _c = _a.previousValue, previousValue_1 = _c === void 0 ? null : _c;
        if (equalityCheck_1(object, previousValue_1) && Object.isFrozen(previousValue_1)) {
            return previousValue_1;
        }
        if (Object.isFrozen(object) || (!Array.isArray(object) && !lodash_1.isPlainObject(object))) {
            return object;
        }
        if (Array.isArray(object)) {
            return Object.freeze(object.map(function (value, index) {
                return deepFreeze(value, {
                    equalityCheck: equalityCheck_1,
                    previousValue: Array.isArray(previousValue_1) ? previousValue_1[index] : undefined,
                });
            }));
        }
        return Object.freeze(Object.getOwnPropertyNames(object).reduce(function (result, key) {
            result[key] = deepFreeze(object[key], {
                equalityCheck: equalityCheck_1,
                previousValue: previousValue_1 && previousValue_1.hasOwnProperty(key) ?
                    previousValue_1[key] :
                    undefined,
            });
            return result;
        }, {}));
    }
    catch (error) {
        if (error instanceof TypeError) {
            return object;
        }
        throw error;
    }
}
exports.default = deepFreeze;
//# sourceMappingURL=deep-freeze.js.map