{"version":3,"sources":["../../../src/common/utils/omit-property.js"],"names":["omitProperty","object","predicateFn","keys","Object","reduce","result","key","value"],"mappings":";;;;;kBAOwBA,Y;;AAPxB;;;;;;AAEA;;;;;AAKe,SAASA,YAAT,CAAsBC,MAAtB,EAA8BC,WAA9B,EAA2C;AACtD,QAAI,CAAC,wBAASD,MAAT,CAAL,EAAuB;AACnB,eAAOA,MAAP;AACH;;AAED,QAAME,OAAOC,OAAOD,IAAP,CAAYF,MAAZ,CAAb;;AAEA,WAAOE,KAAKE,MAAL,CAAY,UAACC,MAAD,EAASC,GAAT,EAAiB;AAChC,YAAMC,QAAQP,OAAOM,GAAP,CAAd;;AAEA,YAAI,CAACL,YAAYM,KAAZ,CAAL,EAAyB;AACrBF,mBAAOC,GAAP,IAAcC,KAAd;AACH;;AAED,eAAOF,MAAP;AACH,KARM,EAQJ,EARI,CAAP;AASH","file":"omit-property.js","sourcesContent":["import isObject from './is-object';\n\n/**\n * @param {Object} object\n * @param {Function} predicateFn\n * @returns {Object}\n */\nexport default function omitProperty(object, predicateFn) {\n    if (!isObject(object)) {\n        return object;\n    }\n\n    const keys = Object.keys(object);\n\n    return keys.reduce((result, key) => {\n        const value = object[key];\n\n        if (!predicateFn(value)) {\n            result[key] = value;\n        }\n\n        return result;\n    }, {});\n}\n"]}