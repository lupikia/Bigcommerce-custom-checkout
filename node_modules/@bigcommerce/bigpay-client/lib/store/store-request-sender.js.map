{"version":3,"sources":["../../src/store/store-request-sender.js"],"names":["StoreRequestSender","config","urlHelper","UrlHelper","create","requestSender","RequestSender","data","callback","url","getInstrumentsUrl","storeId","customerId","currencyCode","options","headers","sendRequest","getTrustedShippingAddressUrl","payload","method","POST","postRequest","getInstrumentByIdUrl","instrumentId","DELETE"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;;;IAKqBA,kB;;;;AACjB;;;;+BAIcC,M,EAAQ;AAClB,gBAAMC,YAAYC,oBAAUC,MAAV,CAAiBH,MAAjB,CAAlB;AACA,gBAAMI,gBAAgBC,wBAAcF,MAAd,EAAtB;;AAEA,mBAAO,IAAIJ,kBAAJ,CAAuBE,SAAvB,EAAkCG,aAAlC,CAAP;AACH;;AAED;;;;;;;;AAKA,gCAAYH,SAAZ,EAAuBG,aAAvB,EAAsC;AAAA;;AAClC;;;;AAIA,aAAKH,SAAL,GAAiBA,SAAjB;;AAEA;;;;AAIA,aAAKG,aAAL,GAAqBA,aAArB;AACH;;AAED;;;;;;;;;wCAKgBE,I,EAAMC,Q,EAAU;AAC5B,gBAAMC,MAAM,KAAKP,SAAL,CAAeQ,iBAAf,CACRH,KAAKI,OADG,EAERJ,KAAKK,UAFG,EAGRL,KAAKM,YAHG,CAAZ;AAKA,gBAAMC,UAAU;AACZC,yBAAS,2BAAaR,IAAb;AADG,aAAhB;;AAIA,iBAAKF,aAAL,CAAmBW,WAAnB,CAA+BP,GAA/B,EAAoC,IAApC,EAA0CK,OAA1C,EAAmDN,QAAnD;AACH;;AAED;;;;;;;;mDAK2BD,I,EAAMC,Q,EAAU;AACvC,gBAAMC,MAAM,KAAKP,SAAL,CAAee,4BAAf,CACRV,KAAKI,OADG,EAERJ,KAAKK,UAFG,EAGRL,KAAKM,YAHG,CAAZ;AAKA,gBAAMK,UAAU,iDAAmCX,IAAnC,CAAhB;AACA,gBAAMO,UAAU;AACZK,wBAAQC,iBADI;AAEZL,yBAAS,2BAAaR,IAAb;AAFG,aAAhB;;AAKA,iBAAKF,aAAL,CAAmBgB,WAAnB,CAA+BZ,GAA/B,EAAoCS,OAApC,EAA6CJ,OAA7C,EAAsDN,QAAtD;AACH;;AAED;;;;;;;;gDAKwBD,I,EAAMC,Q,EAAU;AACpC,gBAAMC,MAAM,KAAKP,SAAL,CAAeoB,oBAAf,CACRf,KAAKI,OADG,EAERJ,KAAKK,UAFG,EAGRL,KAAKgB,YAHG,CAAZ;AAKA,gBAAMT,UAAU;AACZK,wBAAQK,mBADI;AAEZT,yBAAS,2BAAaR,IAAb;AAFG,aAAhB;;AAKA,iBAAKF,aAAL,CAAmBW,WAAnB,CAA+BP,GAA/B,EAAoC,IAApC,EAA0CK,OAA1C,EAAmDN,QAAnD;AACH;;;;;;kBAtFgBR,kB","file":"store-request-sender.js","sourcesContent":["import RequestSender from '../common/http-request/request-sender';\nimport { DELETE, POST } from '../common/http-request/method-types';\nimport UrlHelper from './url-helper';\nimport {\n    mapToHeaders,\n    mapToTrustedShippingAddressPayload,\n} from './v2/mappers';\n\nexport default class StoreRequestSender {\n    /**\n     * @param {Object} config\n     * @returns {StoreRequestSender}\n     */\n    static create(config) {\n        const urlHelper = UrlHelper.create(config);\n        const requestSender = RequestSender.create();\n\n        return new StoreRequestSender(urlHelper, requestSender);\n    }\n\n    /**\n     * @param {UrlHelper} urlHelper\n     * @param {RequestSender} requestSender\n     * @returns {void}\n     */\n    constructor(urlHelper, requestSender) {\n        /**\n         * @private\n         * @type {UrlHelper}\n         */\n        this.urlHelper = urlHelper;\n\n        /**\n         * @private\n         * @type {RequestSender}\n         */\n        this.requestSender = requestSender;\n    }\n\n    /**\n     * @param {Object} data\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    loadInstruments(data, callback) {\n        const url = this.urlHelper.getInstrumentsUrl(\n            data.storeId,\n            data.customerId,\n            data.currencyCode\n        );\n        const options = {\n            headers: mapToHeaders(data),\n        };\n\n        this.requestSender.sendRequest(url, null, options, callback);\n    }\n\n    /**\n     * @param {Object} data\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    loadInstrumentsWithAddress(data, callback) {\n        const url = this.urlHelper.getTrustedShippingAddressUrl(\n            data.storeId,\n            data.customerId,\n            data.currencyCode\n        );\n        const payload = mapToTrustedShippingAddressPayload(data);\n        const options = {\n            method: POST,\n            headers: mapToHeaders(data),\n        };\n\n        this.requestSender.postRequest(url, payload, options, callback);\n    }\n\n    /**\n     * @param {Object} data\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    deleteShopperInstrument(data, callback) {\n        const url = this.urlHelper.getInstrumentByIdUrl(\n            data.storeId,\n            data.customerId,\n            data.instrumentId\n        );\n        const options = {\n            method: DELETE,\n            headers: mapToHeaders(data),\n        };\n\n        this.requestSender.sendRequest(url, null, options, callback);\n    }\n}\n"]}