{"version":3,"sources":["../../../src/payment/offsite-payment-mappers/address-mapper.js"],"names":["AddressMapper","data","mapToAddress","addressKey","address","formattedAddressKey","city","company","countryCode","country","firstName","lastName","phone","provinceCode","province","addressLine1","addressLine2","postCode"],"mappings":";;;;;;;;AAAA;;;;;;IAEqBA,a;;;;;;;;;AAQjB;;;;4CAIoBC,I,EAAM;AACtB,mBAAO,KAAKC,YAAL,CAAkBD,IAAlB,EAAwB,gBAAxB,CAAP;AACH;;AAED;;;;;;;6CAIqBA,I,EAAM;AACvB,mBAAO,KAAKC,YAAL,CAAkBD,IAAlB,EAAwB,iBAAxB,CAAP;AACH;;AAED;;;;;;;;;qCAMaA,I,EAAME,U,EAAY;AAAA;;AAC3B,gBAAMC,UAAUH,KAAKE,UAAL,KAAoB,EAApC;AACA,gBAAME,sBAAsB,wBAAYF,UAAZ,CAA5B;;AAEA,mBAAO,8DACCE,mBADD,YAC8BD,QAAQE,IADtC,6BAECD,mBAFD,eAEiCD,QAAQG,OAFzC,6BAGCF,mBAHD,oBAGsCD,QAAQI,WAH9C,6BAICH,mBAJD,eAIiCD,QAAQK,OAJzC,6BAKCJ,mBALD,kBAKoCD,QAAQM,SAL5C,6BAMCL,mBAND,iBAMmCD,QAAQO,QAN3C,6BAOCN,mBAPD,aAO+BD,QAAQQ,KAPvC,6BAQCP,mBARD,kBAQoCD,QAAQS,YAR5C,6BASCR,mBATD,aAS+BD,QAAQU,QATvC,6BAUCT,mBAVD,gBAUkCD,QAAQW,YAV1C,6BAWCV,mBAXD,gBAWkCD,QAAQY,YAX1C,6BAYCX,mBAZD,WAY6BD,QAAQa,QAZrC,aAAP;AAcH;;;;AA/CD;;;iCAGgB;AACZ,mBAAO,IAAIjB,aAAJ,EAAP;AACH;;;;;;kBANgBA,a","file":"address-mapper.js","sourcesContent":["import { omitNil, toSnakeCase } from '../../common/utils';\n\nexport default class AddressMapper {\n    /**\n     * @returns {AddressMapper}\n     */\n    static create() {\n        return new AddressMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToBillingAddress(data) {\n        return this.mapToAddress(data, 'billingAddress');\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToShippingAddress(data) {\n        return this.mapToAddress(data, 'shippingAddress');\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @param {string} addressKey\n     * @returns {Object}\n     */\n    mapToAddress(data, addressKey) {\n        const address = data[addressKey] || {};\n        const formattedAddressKey = toSnakeCase(addressKey);\n\n        return omitNil({\n            [`${formattedAddressKey}_city`]: address.city,\n            [`${formattedAddressKey}_company`]: address.company,\n            [`${formattedAddressKey}_country_code`]: address.countryCode,\n            [`${formattedAddressKey}_country`]: address.country,\n            [`${formattedAddressKey}_first_name`]: address.firstName,\n            [`${formattedAddressKey}_last_name`]: address.lastName,\n            [`${formattedAddressKey}_phone`]: address.phone,\n            [`${formattedAddressKey}_state_code`]: address.provinceCode,\n            [`${formattedAddressKey}_state`]: address.province,\n            [`${formattedAddressKey}_street_1`]: address.addressLine1,\n            [`${formattedAddressKey}_street_2`]: address.addressLine2,\n            [`${formattedAddressKey}_zip`]: address.postCode,\n        });\n    }\n}\n"]}