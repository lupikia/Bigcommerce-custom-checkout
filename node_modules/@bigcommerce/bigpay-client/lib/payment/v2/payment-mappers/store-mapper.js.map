{"version":3,"sources":["../../../../src/payment/v2/payment-mappers/store-mapper.js"],"names":["StoreMapper","data","locale","mapToLocale","store_identity","mapToIdentity","urls","mapToUrls","store","country_code","countryCode","currency_code","currencyCode","language_code","storeLanguage","id","storeId","name","storeName","cart","cartLink","checkout","checkoutLink","confirmation","orderConfirmationLink","home","shopPath"],"mappings":";;;;;;;;AAAA;;;;IAEqBA,W;;;;;;;;;AAQjB;;;;mCAIWC,I,EAAM;AACb,mBAAO,oBAAQ;AACXC,wBAAQ,KAAKC,WAAL,CAAiBF,IAAjB,CADG;AAEXG,gCAAgB,KAAKC,aAAL,CAAmBJ,IAAnB,CAFL;AAGXK,sBAAM,KAAKC,SAAL,CAAeN,IAAf;AAHK,aAAR,CAAP;AAKH;;AAED;;;;;;;;oCAKYA,I,EAAM;AAAA,8BACSA,IADT,CACNO,KADM;AAAA,gBACNA,KADM,+BACE,EADF;;;AAGd,mBAAO,oBAAQ;AACXC,8BAAcD,MAAME,WADT;AAEXC,+BAAeH,MAAMI,YAFV;AAGXC,+BAAeL,MAAMM;AAHV,aAAR,CAAP;AAKH;;AAED;;;;;;;;sCAKcb,I,EAAM;AAAA,+BACOA,IADP,CACRO,KADQ;AAAA,gBACRA,KADQ,gCACA,EADA;;;AAGhB,mBAAO,oBAAQ;AACXO,oBAAIP,MAAMQ,OAAN,GAAgB,qBAASR,MAAMQ,OAAf,CAAhB,GAA0C,IADnC;AAEXC,sBAAMT,MAAMU;AAFD,aAAR,CAAP;AAIH;;AAED;;;;;;;;kCAKUjB,I,EAAM;AAAA,+BACWA,IADX,CACJO,KADI;AAAA,gBACJA,KADI,gCACI,EADJ;;;AAGZ,mBAAO,oBAAQ;AACXW,sBAAMX,MAAMY,QADD;AAEXC,0BAAUb,MAAMc,YAFL;AAGXC,8BAAcf,MAAMgB,qBAHT;AAIXC,sBAAMjB,MAAMkB;AAJD,aAAR,CAAP;AAMH;;;;AA9DD;;;iCAGgB;AACZ,mBAAO,IAAI1B,WAAJ,EAAP;AACH;;;;;;kBANgBA,W","file":"store-mapper.js","sourcesContent":["import { omitNil, toNumber } from '../../../common/utils';\n\nexport default class StoreMapper {\n    /**\n     * @returns {StoreMapper}\n     */\n    static create() {\n        return new StoreMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToStore(data) {\n        return omitNil({\n            locale: this.mapToLocale(data),\n            store_identity: this.mapToIdentity(data),\n            urls: this.mapToUrls(data),\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToLocale(data) {\n        const { store = {} } = data;\n\n        return omitNil({\n            country_code: store.countryCode,\n            currency_code: store.currencyCode,\n            language_code: store.storeLanguage,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToIdentity(data) {\n        const { store = {} } = data;\n\n        return omitNil({\n            id: store.storeId ? toNumber(store.storeId) : null,\n            name: store.storeName,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToUrls(data) {\n        const { store = {} } = data;\n\n        return omitNil({\n            cart: store.cartLink,\n            checkout: store.checkoutLink,\n            confirmation: store.orderConfirmationLink,\n            home: store.shopPath,\n        });\n    }\n}\n"]}