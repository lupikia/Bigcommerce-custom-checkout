{"version":3,"sources":["../../src/payment/client-token-generator.js"],"names":["ClientTokenGenerator","config","urlHelper","UrlHelper","create","requestSender","RequestSender","clientTokenMapper","ClientTokenMapper","data","callback","url","getGenerateClientTokenUrl","payload","mapToClientToken","postRequest"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;IAEqBA,oB;;;;AACjB;;;;2BAIcC,M,EAAQ;AAClB,UAAMC,YAAYC,oBAAUC,MAAV,CAAiBH,MAAjB,CAAlB;AACA,UAAMI,gBAAgBC,wBAAcF,MAAd,EAAtB;AACA,UAAMG,oBAAoBC,4BAAkBJ,MAAlB,EAA1B;;AAEA,aAAO,IAAIJ,oBAAJ,CAAyBE,SAAzB,EAAoCG,aAApC,EAAmDE,iBAAnD,CAAP;AACH;;AAED;;;;;;;;;AAMA,gCAAYL,SAAZ,EAAuBG,aAAvB,EAAsCE,iBAAtC,EAAyD;AAAA;;AACrD;;;;AAIA,SAAKL,SAAL,GAAiBA,SAAjB;;AAEA;;;;AAIA,SAAKG,aAAL,GAAqBA,aAArB;;AAEA;;;;AAIA,SAAKE,iBAAL,GAAyBA,iBAAzB;AACH;;AAED;;;;;;;;;wCAKoBE,I,EAAMC,Q,EAAU;AAChC,UAAMC,MAAM,KAAKT,SAAL,CAAeU,yBAAf,EAAZ;AACA,UAAMC,UAAU,KAAKN,iBAAL,CAAuBO,gBAAvB,CAAwCL,IAAxC,CAAhB;;AAEA,WAAKJ,aAAL,CAAmBU,WAAnB,CAA+BJ,GAA/B,EAAoCE,OAApC,EAA6C,EAA7C,EAAiDH,QAAjD;AACH;;;;;;kBAjDgBV,oB","file":"client-token-generator.js","sourcesContent":["import RequestSender from '../common/http-request/request-sender';\nimport ClientTokenMapper from './v2/payment-mappers/client-token-mapper';\nimport UrlHelper from './url-helper';\n\nexport default class ClientTokenGenerator {\n    /**\n     * @param {Object} config\n     * @returns {PaymentSubmitter}\n     */\n    static create(config) {\n        const urlHelper = UrlHelper.create(config);\n        const requestSender = RequestSender.create();\n        const clientTokenMapper = ClientTokenMapper.create();\n\n        return new ClientTokenGenerator(urlHelper, requestSender, clientTokenMapper);\n    }\n\n    /**\n     * @param {UrlHelper} urlHelper\n     * @param {RequestSender} requestSender\n     * @param {ClientTokenMapper} clientTokenMapper\n     * @returns {void}\n     */\n    constructor(urlHelper, requestSender, clientTokenMapper) {\n        /**\n         * @private\n         * @type {UrlHelper}\n         */\n        this.urlHelper = urlHelper;\n\n        /**\n         * @private\n         * @type {RequestSender}\n         */\n        this.requestSender = requestSender;\n\n        /**\n         * @private\n         * @type {ClientTokenMapper}\n         */\n        this.clientTokenMapper = clientTokenMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @returns {void}\n     */\n    generateClientToken(data, callback) {\n        const url = this.urlHelper.getGenerateClientTokenUrl();\n        const payload = this.clientTokenMapper.mapToClientToken(data);\n\n        this.requestSender.postRequest(url, payload, {}, callback);\n    }\n}\n"]}