{"version":3,"file":"script-loader.js","sourceRoot":"","sources":["../src/script-loader.ts"],"names":[],"mappings":"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","sourcesContent":["import { RequestSender } from '@bigcommerce/request-sender';\n\nimport BrowserSupport from './browser-support';\n\nexport interface LoadScriptOptions {\n    async: boolean;\n    attributes: ScriptAttributes;\n}\n\nexport interface PreloadScriptOptions {\n    prefetch: boolean;\n}\n\nexport interface ScriptAttributes {\n    [key: string]: string;\n}\n\nexport default class ScriptLoader {\n    private _scripts: { [key: string]: Promise<void> } = {};\n    private _preloadedScripts: { [key: string]: Promise<void> } = {};\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _browserSupport: BrowserSupport,\n        private _requestSender: RequestSender\n    ) {}\n\n    loadScript(src: string, options?: LoadScriptOptions): Promise<void> {\n        if (!this._scripts[src]) {\n            this._scripts[src] = new Promise((resolve, reject) => {\n                const script = document.createElement('script') as LegacyHTMLScriptElement;\n                const { async = false, attributes = {} } = options || {};\n\n                Object.keys(attributes)\n                    .forEach(key => {\n                        script.setAttribute(key, attributes[key]);\n                    });\n\n                script.onload = () => resolve();\n                script.onreadystatechange = () => resolve();\n                script.onerror = event => {\n                    delete this._scripts[src];\n                    reject(event);\n                };\n                script.async = async;\n                script.src = src;\n\n                document.body.appendChild(script);\n            });\n        }\n\n        return this._scripts[src];\n    }\n\n    loadScripts(urls: string[], options?: LoadScriptOptions): Promise<void> {\n        return Promise.all(urls.map(url => this.loadScript(url, options)))\n            .then(() => undefined);\n    }\n\n    preloadScript(url: string, options?: PreloadScriptOptions): Promise<void> {\n        if (!this._preloadedScripts[url]) {\n            this._preloadedScripts[url] = new Promise((resolve, reject) => {\n                const { prefetch = false } = options || {};\n                const rel = prefetch ? 'prefetch' : 'preload';\n\n                if (this._browserSupport.canSupportRel(rel)) {\n                    const preloadedScript = document.createElement('link');\n\n                    preloadedScript.as = 'script';\n                    preloadedScript.rel = rel;\n                    preloadedScript.href = url;\n\n                    preloadedScript.onload = () => {\n                        resolve();\n                    };\n\n                    preloadedScript.onerror = () => {\n                        delete this._preloadedScripts[url];\n                        reject();\n                    };\n\n                    document.head.appendChild(preloadedScript);\n                } else {\n                    this._requestSender.get(url, {\n                        credentials: false,\n                        headers: { Accept: 'application/javascript' },\n                    })\n                        .then(() => resolve())\n                        .catch(reject);\n                }\n            });\n        }\n\n        return this._preloadedScripts[url];\n    }\n\n    preloadScripts(urls: string[], options?: PreloadScriptOptions): Promise<void> {\n        return Promise.all(urls.map(url => this.preloadScript(url, options)))\n            .then(() => undefined);\n    }\n}\n\ninterface LegacyHTMLScriptElement extends HTMLScriptElement {\n    // `onreadystatechange` is needed to support legacy IE\n    onreadystatechange(this: HTMLElement, event: Event): any;\n}\n"]}