{"version":3,"sources":["webpack:///./assets/js/theme/auth.js","webpack:///./node_modules/lodash/_baseIteratee.js","webpack:///./assets/js/theme/common/state-country.js","webpack:///./node_modules/lodash/each.js","webpack:///./node_modules/lodash/transform.js","webpack:///./node_modules/lodash/_baseForOwn.js"],"names":["Auth","context","formCreateSelector","registerLoginValidation","$loginForm","loginModel","forms","this","loginValidator","nod","submit","add","selector","validate","cb","val","email","errorMessage","useValidEmail","password","enterPass","on","event","performCheck","areAll","preventDefault","registerForgotPasswordValidation","$forgotPasswordForm","forgotPasswordValidator","registerNewPasswordValidation","newPasswordValidator","$","newPasswordForm","passwordSelector","password2Selector","Validators","setPasswordValidation","passwordRequirements","registerCreateAccountValidator","$createAccountForm","$last","validationModel","validation","createAccountValidator","$stateElement","emailSelector","$emailElement","$passwordElement","$password2Element","stateCountry","err","field","Error","$field","getStatus","remove","is","setStateCountryValidation","cleanUpStateValidation","setEmailValidation","onReady","classifyForm","$newPasswordForm","length","PageManager","module","exports","value","stateElement","options","callback","countryName","currentTarget","utils","api","country","getByName","response","showAlertModal","state_error","$currentInput","data","states","newElement","attrs","prop","result","item","ret","name","replacementAttributes","type","id","class","replaceWith","$newElement","insertStateHiddenField","prev","find","hide","makeStateOptional","$selectElement","$hiddenInput","append","required","show","makeStateRequired","statesArray","container","push","prefix","stateObj","useIdForStates","html","join","addOptions","array","iteratee","index","arrayEach","baseCreate","baseForOwn","baseIteratee","getPrototype","isArray","isBuffer","isFunction","isObject","isTypedArray","object","accumulator","isArr","isArrLike","Ctor","constructor","baseFor","keys"],"mappings":"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","file":"theme-bundle.chunk.6.js","sourcesContent":["import PageManager from './page-manager';\nimport stateCountry from './common/state-country';\nimport nod from './common/nod';\nimport validation from './common/form-validation';\nimport forms from './common/models/forms';\nimport { classifyForm, Validators } from './common/form-utils';\n\nexport default class Auth extends PageManager {\n    constructor(context) {\n        super(context);\n        this.formCreateSelector = 'form[data-create-account-form]';\n    }\n\n    registerLoginValidation($loginForm) {\n        const loginModel = forms;\n\n        this.loginValidator = nod({\n            submit: '.login-form input[type=\"submit\"]',\n        });\n\n        this.loginValidator.add([\n            {\n                selector: '.login-form input[name=\"login_email\"]',\n                validate: (cb, val) => {\n                    const result = loginModel.email(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.useValidEmail,\n            },\n            {\n                selector: '.login-form input[name=\"login_pass\"]',\n                validate: (cb, val) => {\n                    const result = loginModel.password(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.enterPass,\n            },\n        ]);\n\n        $loginForm.on('submit', event => {\n            this.loginValidator.performCheck();\n\n            if (this.loginValidator.areAll('valid')) {\n                return;\n            }\n\n            event.preventDefault();\n        });\n    }\n\n    registerForgotPasswordValidation($forgotPasswordForm) {\n        this.forgotPasswordValidator = nod({\n            submit: '.forgot-password-form input[type=\"submit\"]',\n        });\n\n        this.forgotPasswordValidator.add([\n            {\n                selector: '.forgot-password-form input[name=\"email\"]',\n                validate: (cb, val) => {\n                    const result = forms.email(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.useValidEmail,\n            },\n        ]);\n\n        $forgotPasswordForm.on('submit', event => {\n            this.forgotPasswordValidator.performCheck();\n\n            if (this.forgotPasswordValidator.areAll('valid')) {\n                return;\n            }\n\n            event.preventDefault();\n        });\n    }\n\n    registerNewPasswordValidation() {\n        const newPasswordForm = '.new-password-form';\n        const newPasswordValidator = nod({\n            submit: $(`${newPasswordForm} input[type=\"submit\"]`),\n        });\n        const passwordSelector = $(`${newPasswordForm} input[name=\"password\"]`);\n        const password2Selector = $(`${newPasswordForm} input[name=\"password_confirm\"]`);\n\n        Validators.setPasswordValidation(\n            newPasswordValidator,\n            passwordSelector,\n            password2Selector,\n            this.passwordRequirements,\n        );\n    }\n\n    registerCreateAccountValidator($createAccountForm) {\n        const validationModel = validation($createAccountForm);\n        const createAccountValidator = nod({\n            submit: `${this.formCreateSelector} input[type='submit']`,\n        });\n        const $stateElement = $('[data-field-type=\"State\"]');\n        const emailSelector = `${this.formCreateSelector} [data-field-type='EmailAddress']`;\n        const $emailElement = $(emailSelector);\n        const passwordSelector = `${this.formCreateSelector} [data-field-type='Password']`;\n        const $passwordElement = $(passwordSelector);\n        const password2Selector = `${this.formCreateSelector} [data-field-type='ConfirmPassword']`;\n        const $password2Element = $(password2Selector);\n\n        createAccountValidator.add(validationModel);\n\n        if ($stateElement) {\n            let $last;\n\n            // Requests the states for a country with AJAX\n            stateCountry($stateElement, this.context, (err, field) => {\n                if (err) {\n                    throw new Error(err);\n                }\n\n                const $field = $(field);\n\n                if (createAccountValidator.getStatus($stateElement) !== 'undefined') {\n                    createAccountValidator.remove($stateElement);\n                }\n\n                if ($last) {\n                    createAccountValidator.remove($last);\n                }\n\n                if ($field.is('select')) {\n                    $last = field;\n                    Validators.setStateCountryValidation(createAccountValidator, field);\n                } else {\n                    Validators.cleanUpStateValidation(field);\n                }\n            });\n        }\n\n        if ($emailElement) {\n            createAccountValidator.remove(emailSelector);\n            Validators.setEmailValidation(createAccountValidator, emailSelector);\n        }\n\n        if ($passwordElement && $password2Element) {\n            createAccountValidator.remove(passwordSelector);\n            createAccountValidator.remove(password2Selector);\n            Validators.setPasswordValidation(\n                createAccountValidator,\n                passwordSelector,\n                password2Selector,\n                this.passwordRequirements,\n            );\n        }\n\n        $createAccountForm.on('submit', event => {\n            createAccountValidator.performCheck();\n\n            if (createAccountValidator.areAll('valid')) {\n                return;\n            }\n\n            event.preventDefault();\n        });\n    }\n\n    /**\n     * Request is made in this function to the remote endpoint and pulls back the states for country.\n     */\n    onReady() {\n        const $createAccountForm = classifyForm(this.formCreateSelector);\n        const $loginForm = classifyForm('.login-form');\n        const $forgotPasswordForm = classifyForm('.forgot-password-form');\n        const $newPasswordForm = classifyForm('.new-password-form'); // reset password\n\n        // Injected via auth.html\n        this.passwordRequirements = this.context.passwordRequirements;\n\n        if ($loginForm.length) {\n            this.registerLoginValidation($loginForm);\n        }\n\n        if ($newPasswordForm.length) {\n            this.registerNewPasswordValidation();\n        }\n\n        if ($forgotPasswordForm.length) {\n            this.registerForgotPasswordValidation($forgotPasswordForm);\n        }\n\n        if ($createAccountForm.length) {\n            this.registerCreateAccountValidator($createAccountForm);\n        }\n    }\n}\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","import utils from '@bigcommerce/stencil-utils';\nimport _ from 'lodash';\nimport { insertStateHiddenField } from './form-utils';\nimport { showAlertModal } from '../global/modal';\n\n/**\n * If there are no options from bcapp, a text field will be sent. This will create a select element to hold options after the remote request.\n * @returns {jQuery|HTMLElement}\n */\nfunction makeStateRequired(stateElement, context) {\n    const attrs = _.transform(stateElement.prop('attributes'), (result, item) => {\n        const ret = result;\n        ret[item.name] = item.value;\n        return ret;\n    });\n\n    const replacementAttributes = {\n        id: attrs.id,\n        'data-label': attrs['data-label'],\n        class: 'form-select',\n        name: attrs.name,\n        'data-field-type': attrs['data-field-type'],\n    };\n\n    stateElement.replaceWith($('<select></select>', replacementAttributes));\n\n    const $newElement = $('[data-field-type=\"State\"]');\n    const $hiddenInput = $('[name*=\"FormFieldIsText\"]');\n\n    if ($hiddenInput.length !== 0) {\n        $hiddenInput.remove();\n    }\n\n    if ($newElement.prev().find('small').length === 0) {\n        // String is injected from localizer\n        $newElement.prev().append(`<small>${context.required}</small>`);\n    } else {\n        $newElement.prev().find('small').show();\n    }\n\n    return $newElement;\n}\n\n/**\n * If a country with states is the default, a select will be sent,\n * In this case we need to be able to switch to an input field and hide the required field\n */\nfunction makeStateOptional(stateElement) {\n    const attrs = _.transform(stateElement.prop('attributes'), (result, item) => {\n        const ret = result;\n        ret[item.name] = item.value;\n\n        return ret;\n    });\n\n    const replacementAttributes = {\n        type: 'text',\n        id: attrs.id,\n        'data-label': attrs['data-label'],\n        class: 'form-input',\n        name: attrs.name,\n        'data-field-type': attrs['data-field-type'],\n    };\n\n    stateElement.replaceWith($('<input />', replacementAttributes));\n\n    const $newElement = $('[data-field-type=\"State\"]');\n\n    if ($newElement.length !== 0) {\n        insertStateHiddenField($newElement);\n        $newElement.prev().find('small').hide();\n    }\n\n    return $newElement;\n}\n\n/**\n * Adds the array of options from the remote request to the newly created select box.\n * @param {Object} statesArray\n * @param {jQuery} $selectElement\n * @param {Object} options\n */\nfunction addOptions(statesArray, $selectElement, options) {\n    const container = [];\n\n    container.push(`<option value=\"\">${statesArray.prefix}</option>`);\n\n    if (!_.isEmpty($selectElement)) {\n        _.each(statesArray.states, (stateObj) => {\n            if (options.useIdForStates) {\n                container.push(`<option value=\"${stateObj.id}\">${stateObj.name}</option>`);\n            } else {\n                container.push(`<option value=\"${stateObj.name}\">${stateObj.name}</option>`);\n            }\n        });\n\n        $selectElement.html(container.join(' '));\n    }\n}\n\n/**\n *\n * @param {jQuery} stateElement\n * @param {Object} context\n * @param {Object} options\n * @param {Function} callback\n */\nexport default function (stateElement, context = {}, options, callback) {\n    /**\n     * Backwards compatible for three parameters instead of four\n     *\n     * Available options:\n     *\n     * useIdForStates {Bool} - Generates states dropdown using id for values instead of strings\n     */\n    if (typeof options === 'function') {\n        /* eslint-disable no-param-reassign */\n        callback = options;\n        options = {};\n        /* eslint-enable no-param-reassign */\n    }\n\n    $('select[data-field-type=\"Country\"]').on('change', event => {\n        const countryName = $(event.currentTarget).val();\n\n        if (countryName === '') {\n            return;\n        }\n\n        utils.api.country.getByName(countryName, (err, response) => {\n            if (err) {\n                showAlertModal(context.state_error);\n                return callback(err);\n            }\n\n            const $currentInput = $('[data-field-type=\"State\"]');\n\n            if (!_.isEmpty(response.data.states)) {\n                // The element may have been replaced with a select, reselect it\n                const $selectElement = makeStateRequired($currentInput, context);\n\n                addOptions(response.data, $selectElement, options);\n                callback(null, $selectElement);\n            } else {\n                const newElement = makeStateOptional($currentInput, context);\n\n                callback(null, newElement);\n            }\n        });\n    });\n}\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var arrayEach = require('./_arrayEach'),\n    baseCreate = require('./_baseCreate'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee'),\n    getPrototype = require('./_getPrototype'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isTypedArray = require('./isTypedArray');\n\n/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */\nfunction transform(object, iteratee, accumulator) {\n  var isArr = isArray(object),\n      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n  iteratee = baseIteratee(iteratee, 4);\n  if (accumulator == null) {\n    var Ctor = object && object.constructor;\n    if (isArrLike) {\n      accumulator = isArr ? new Ctor : [];\n    }\n    else if (isObject(object)) {\n      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n    }\n    else {\n      accumulator = {};\n    }\n  }\n  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n    return iteratee(accumulator, value, index, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = transform;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n"],"sourceRoot":""}