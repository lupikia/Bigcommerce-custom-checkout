{"version":3,"sources":["webpack:///./assets/js/theme/search.js","webpack:///./assets/js/theme/common/url-utils.js","webpack:///./assets/js/theme/catalog.js","webpack:///./assets/js/theme/common/faceted-search.js"],"names":["Search","formatCategoryTreeForJSTree","node","nodeData","text","data","id","metadata","state","selected","opened","children","forEach","childNode","push","showProducts","url","urlUtils","replaceParams","window","location","href","section","this","$productListingContainer","removeClass","$facetedSearchContainer","$contentResultsContainer","addClass","$","goToUrl","showContent","onReady","$searchForm","$categoryTreeContainer","find","Url","parse","treeData","length","initFacetedSearch","onSortBySubmit","bind","hooks","on","collapsibleFactory","event","preventDefault","query","validator","initValidation","bindValidation","context","categoryTree","categoryTreeData","createCategoryTree","selectedCategoryIds","jstree","get_selected","check","remove","input","type","name","value","append","loadTreeNodes","cb","ajax","selectedCategoryId","prefix","headers","BCData","csrf_token","done","formattedResults","dataNode","$container","treeOptions","core","themes","icons","checkbox","three_state","plugins","$searchHeading","$searchCount","requestOptions","template","productListing","sidebar","heading","productCount","config","product_results","limit","searchProductsPerPage","showMore","facetedSearch","FacetedSearch","content","html","animate","scrollTop","$form","nod","submit","$element","add","selector","validate","errorMessage","performCheck","areAll","CatalogPage","getUrl","pathname","search","history","pushState","document","title","trigger","params","param","parsed","hasOwnProperty","format","buildQueryString","queryData","key","out","Array","isArray","ndx","substring","parseQueryParams","i","temp","split","queryParams","currentTarget","serialize","page","PageManager","callback","options","defaultOptions","accordionToggleSelector","blockerSelector","clearFacetSelector","componentSelector","facetNavListSelector","priceRangeErrorSelector","priceRangeFieldsetSelector","priceRangeFormSelector","priceRangeMaxPriceSelector","priceRangeMinPriceSelector","showMoreToggleSelector","facetedSearchFilterItems","modal","modalFactory","modalOpen","collapsedFacets","collapsedFacetItems","initPriceValidator","each","index","navList","collapseFacetItems","accordionToggle","collapsible","isCollapsed","targetId","setTimeout","is","collapseAllFacets","onStateChange","onToggleClick","onAccordionToggle","onClearFacet","onFacetClick","onRangeSubmit","filterFacetItems","bindEvents","refreshView","restoreCollapsedFacets","restoreCollapsedFacetItems","updateView","show","api","getPage","err","hide","Error","expandFacetItems","$navList","attr","hasMoreResults","toggleFacetItems","getMoreFacetResults","facet","facetUrl","list_all","response","open","updateContent","$items","val","toLowerCase","element","indexOf","expandFacet","$accordionToggle","collapseFacet","close","expandAllFacets","selectors","errorSelector","fieldsetSelector","formSelector","maxPriceSelector","minPriceSelector","Validators","setMinMaxPriceValidation","priceRangeValidator","unbindEvents","off","stopPropagation","$toggle","$link","toggleClass","constants","VALID","decodeURI"],"mappings":"sQAUqBA,E,wLACjBC,4BAAA,SAA4BC,GAAM,WACxBC,EAAW,CACbC,KAAMF,EAAKG,KACXC,GAAIJ,EAAKK,SAASD,GAClBE,MAAO,CACHC,SAAUP,EAAKO,WAgBvB,OAZIP,EAAKM,QACLL,EAASK,MAAME,OAAwB,SAAfR,EAAKM,MAC7BL,EAASQ,UAAW,GAGpBT,EAAKS,WACLR,EAASQ,SAAW,GACpBT,EAAKS,SAASC,SAAQ,SAACC,GACnBV,EAASQ,SAASG,KAAK,EAAKb,4BAA4BY,QAIzDV,G,EAGXY,aAAA,WACI,IAAMC,EAAMC,IAASC,cAAcC,OAAOC,SAASC,KAAM,CACrDC,QAAS,YAGbC,KAAKC,yBAAyBC,YAAY,oBAC1CF,KAAKG,wBAAwBD,YAAY,oBACzCF,KAAKI,yBAAyBC,SAAS,oBAEvCC,EAAE,iCAAiCJ,YAAY,+BAC/CI,EAAE,iCAAiCD,SAAS,iBAE5CC,EAAE,iCAAiCJ,YAAY,iBAC/CI,EAAE,iCAAiCD,SAAS,+BAE5CX,IAASa,QAAQd,I,EAGrBe,YAAA,WACI,IAAMf,EAAMC,IAASC,cAAcC,OAAOC,SAASC,KAAM,CACrDC,QAAS,YAGbC,KAAKI,yBAAyBF,YAAY,oBAC1CF,KAAKC,yBAAyBI,SAAS,oBACvCL,KAAKG,wBAAwBE,SAAS,oBAEtCC,EAAE,iCAAiCJ,YAAY,+BAC/CI,EAAE,iCAAiCD,SAAS,iBAE5CC,EAAE,iCAAiCJ,YAAY,iBAC/CI,EAAE,iCAAiCD,SAAS,+BAE5CX,IAASa,QAAQd,I,EAGrBgB,QAAA,WAAU,WAGAC,EAAcJ,EAAE,+BAChBK,EAAyBD,EAAYE,KAAK,+BAC1CnB,EAAMoB,IAAIC,MAAMlB,OAAOC,SAASC,MAAM,GACtCiB,EAAW,GACjBf,KAAKC,yBAA2BK,EAAE,8BAClCN,KAAKG,wBAA0BG,EAAE,6BACjCN,KAAKI,yBAA2BE,EAAE,2BAG9BA,EAAE,kBAAkBU,OAAS,EAC7BhB,KAAKiB,qBAELjB,KAAKkB,eAAiBlB,KAAKkB,eAAeC,KAAKnB,MAC/CoB,IAAMC,GAAG,mBAAoBrB,KAAKkB,iBAItCI,cAEAhB,EAAE,iCAAiCe,GAAG,SAAS,SAAAE,GAC3CA,EAAMC,iBACN,EAAKhC,kBAGTc,EAAE,iCAAiCe,GAAG,SAAS,SAAAE,GAC3CA,EAAMC,iBACN,EAAKhB,iBAGuD,IAA5DR,KAAKC,yBAAyBW,KAAK,cAAcI,QAAsC,YAAtBvB,EAAIgC,MAAM1B,QAC3EC,KAAKQ,cAELR,KAAKR,eAGT,IAAMkC,EAAY1B,KAAK2B,eAAejB,GACjCkB,eAAelB,EAAYE,KAAK,sBAErCZ,KAAK6B,QAAQC,aAAazC,SAAQ,SAACV,GAC/BoC,EAASxB,KAAK,EAAKb,4BAA4BC,OAGnDqB,KAAK+B,iBAAmBhB,EACxBf,KAAKgC,mBAAmBrB,GAExBD,EAAYW,GAAG,UAAU,SAAAE,GACrB,IAAMU,EAAsBtB,EAAuBuB,SAASC,eAE5D,IAAKT,EAAUU,QACX,OAAOb,EAAMC,iBAGjBd,EAAYE,KAAK,4BAA8ByB,SAE/C,MAAyBJ,EAAzB,wDAA8C,yFACpCK,EAAQhC,EAAE,UAAW,CACvBiC,KAAM,SACNC,KAAM,aACNC,MAJsC,IAO1C/B,EAAYgC,OAAOJ,Q,EAK/BK,cAAA,SAAchE,EAAMiE,GAAI,WACpBtC,EAAEuC,KAAK,CACHpD,IAAK,2BACLX,KAAM,CACFgE,mBAAoBnE,EAAKI,GACzBgE,OAAQ,YAEZC,QAAS,CACL,eAAgBpD,OAAOqD,QAAUrD,OAAOqD,OAAOC,WAAatD,OAAOqD,OAAOC,WAAa,MAE5FC,MAAK,SAAArE,GACJ,IAAMsE,EAAmB,GAEzBtE,EAAKO,SAAQ,SAACgE,GACVD,EAAiB7D,KAAK,EAAKb,4BAA4B2E,OAG3DT,EAAGQ,O,EAIXpB,mBAAA,SAAmBsB,GAAY,WACrBC,EAAc,CAChBC,KAAM,CACF1E,KAAM,SAACH,EAAMiE,GAEO,MAAZjE,EAAKI,GACL6D,EAAG,EAAKb,kBAGR,EAAKY,cAAchE,EAAMiE,IAGjCa,OAAQ,CACJC,OAAO,IAGfC,SAAU,CACNC,aAAa,GAEjBC,QAAS,CACL,aAIRP,EAAWpB,OAAOqB,I,EAGtBtC,kBAAA,WACI,IAAMhB,EAA2BK,EAAE,8BAC7BH,EAA0BG,EAAE,6BAC5BwD,EAAiBxD,EAAE,2BACnByD,EAAezD,EAAE,iCAEjB0D,EAAiB,CACnBC,SAAU,CACNC,eAAgB,yBAChBC,QAAS,iBACTC,QAAS,iBACTC,aAAc,wBAElBC,OAAQ,CACJC,gBAAiB,CACbC,MAVYxE,KAAK6B,QAAQ4C,wBAajCC,SAAU,oBAGd1E,KAAK2E,cAAgB,IAAIC,IAAcZ,GAAgB,SAACa,GACpD5E,EAAyB6E,KAAKD,EAAQX,gBACtC/D,EAAwB2E,KAAKD,EAAQV,SACrCL,EAAegB,KAAKD,EAAQT,SAC5BL,EAAae,KAAKD,EAAQR,cAE1B/D,EAAE,cAAcyE,QAAQ,CACpBC,UAAW,GACZ,S,EAIXrD,eAAA,SAAesD,GAMX,OALAjF,KAAKiF,MAAQA,EACbjF,KAAK0B,UAAYwD,YAAI,CACjBC,OAAQF,IAGLjF,M,EAGX4B,eAAA,SAAewD,GASX,OARIpF,KAAK0B,WACL1B,KAAK0B,UAAU2D,IAAI,CACfC,SAAUF,EACVG,SAAU,WACVC,aAAcJ,EAAStG,KAAK,kBAI7BkB,M,EAGXoC,MAAA,WACI,QAAIpC,KAAK0B,YACL1B,KAAK0B,UAAU+D,eACRzF,KAAK0B,UAAUgE,OAAO,W,GA3OLC,M,mGCR9BjG,EAAW,CACbkG,OAAQ,oBAAShG,OAAOC,SAASgG,SAAWjG,OAAOC,SAASiG,QAE5DvF,QAAS,SAACd,GACNG,OAAOmG,QAAQC,UAAU,GAAIC,SAASC,MAAOzG,GAC7Ca,EAAEV,QAAQuG,QAAQ,gBAGtBxG,cAAe,SAACF,EAAK2G,GACjB,IACIC,EADEC,EAASzF,IAAIC,MAAMrB,GAAK,GAM9B,IAAK4G,KAFLC,EAAOR,OAAS,KAEFM,EACNA,EAAOG,eAAeF,KACtBC,EAAO7E,MAAM4E,GAASD,EAAOC,IAIrC,OAAOxF,IAAI2F,OAAOF,IAGtBG,iBAAkB,SAACC,GACf,IACIC,EADAC,EAAM,GAEV,IAAKD,KAAOD,EACR,GAAIA,EAAUH,eAAeI,GACzB,GAAIE,MAAMC,QAAQJ,EAAUC,IAAO,CAC/B,IAAII,OAAG,EAEP,IAAKA,KAAOL,EAAUC,GACdD,EAAUC,GAAKJ,eAAeQ,KAC9BH,GAAO,IAAID,EAAR,IAAeD,EAAUC,GAAKI,SAIzCH,GAAO,IAAID,EAAR,IAAeD,EAAUC,GAKxC,OAAOC,EAAII,UAAU,IAEzBC,iBAAkB,SAACP,GAGf,IAFA,IAAMN,EAAS,GAENc,EAAI,EAAGA,EAAIR,EAAU1F,OAAQkG,IAAK,CACvC,IAAMC,EAAOT,EAAUQ,GAAGE,MAAM,KAE5BD,EAAK,KAAMf,EACPS,MAAMC,QAAQV,EAAOe,EAAK,KAC1Bf,EAAOe,EAAK,IAAI5H,KAAK4H,EAAK,IAE1Bf,EAAOe,EAAK,IAAM,CAACf,EAAOe,EAAK,IAAKA,EAAK,IAG7Cf,EAAOe,EAAK,IAAMA,EAAK,GAI/B,OAAOf,IAIA1G,Q,oJChEMiG,E,gLACjBzE,eAAA,SAAeK,GACX,IAAM9B,EAAMoB,IAAIC,MAAMlB,OAAOC,SAASC,MAAM,GACtCuH,EAAc/G,EAAEiB,EAAM+F,eAAeC,YAAYH,MAAM,KAE7D3H,EAAIgC,MAAM4F,EAAY,IAAMA,EAAY,UACjC5H,EAAIgC,MAAM+F,KAEjBjG,EAAMC,iBACN5B,OAAOC,SAAWgB,IAAI2F,OAAO,CAAEX,SAAUpG,EAAIoG,SAAUC,OAAQpG,IAAS+G,iBAAiBhH,EAAIgC,U,GAT5DgG,O,sNCQnC7C,E,WAqBF,WAAYZ,EAAgB0D,EAAUC,GAAS,WACrCC,EAAiB,CACnBC,wBAAyB,6EACzBC,gBAAiB,0BACjBC,mBAAoB,0CACpBC,kBAAmB,yBACnBC,qBAAsB,0BACtBC,wBAAyB,wCACzBC,2BAA4B,mCAC5BC,uBAAwB,oBACxBC,2BAA4B,qCAC5BC,2BAA4B,qCAC5BC,uBAAwB,gDACxBC,yBAA0B,yCAC1BC,MAAOC,YAAa,UAAU,GAC9BC,WAAW,GAIf3I,KAAKgE,eAAiBA,EACtBhE,KAAK0H,SAAWA,EAChB1H,KAAK2H,QAAU,IAAS,GAAIC,EAAgBD,GAC5C3H,KAAK4I,gBAAkB,GACvB5I,KAAK6I,oBAAsB,GAG3BvH,cAGAtB,KAAK8I,qBAGLxI,EAAEN,KAAK2H,QAAQM,sBAAsBc,MAAK,SAACC,EAAOC,GAC9C,EAAKC,mBAAmB5I,EAAE2I,OAI9B3I,EAAEN,KAAK2H,QAAQE,yBAAyBkB,MAAK,SAACC,EAAOG,GACjD,IACMC,EADmB9I,EAAE6I,GACUrK,KAAK,uBAEtCsK,EAAYC,aACZ,EAAKT,gBAAgBrJ,KAAK6J,EAAYE,aAM9CC,YAAW,WACHjJ,EAAE,EAAKqH,QAAQK,mBAAmBwB,GAAG,YACrC,EAAKC,uBAKbzJ,KAAK0J,cAAgB1J,KAAK0J,cAAcvI,KAAKnB,MAC7CA,KAAK2J,cAAgB3J,KAAK2J,cAAcxI,KAAKnB,MAC7CA,KAAK4J,kBAAoB5J,KAAK4J,kBAAkBzI,KAAKnB,MACrDA,KAAK6J,aAAe7J,KAAK6J,aAAa1I,KAAKnB,MAC3CA,KAAK8J,aAAe9J,KAAK8J,aAAa3I,KAAKnB,MAC3CA,KAAK+J,cAAgB/J,KAAK+J,cAAc5I,KAAKnB,MAC7CA,KAAKkB,eAAiBlB,KAAKkB,eAAeC,KAAKnB,MAC/CA,KAAKgK,iBAAmBhK,KAAKgK,iBAAiB7I,KAAKnB,MAEnDA,KAAKiK,a,2BAITC,YAAA,SAAYrF,GACJA,GACA7E,KAAK0H,SAAS7C,GAIlBvD,cAGAtB,KAAK8I,qBAGL9I,KAAKmK,yBACLnK,KAAKoK,6BAGLpK,KAAKiK,c,EAGTI,WAAA,WAAa,WACT/J,EAAEN,KAAK2H,QAAQG,iBAAiBwC,OAEhCC,IAAIC,QAAQ9K,IAASkG,SAAU5F,KAAKgE,gBAAgB,SAACyG,EAAK5F,GAGtD,GAFAvE,EAAE,EAAKqH,QAAQG,iBAAiB4C,OAE5BD,EACA,MAAM,IAAIE,MAAMF,GAIpB,EAAKP,YAAYrF,O,EAIzB+F,iBAAA,SAAiBC,GACb,IAAM9L,EAAK8L,EAASC,KAAK,MAGzB9K,KAAK6I,oBAAsB,IAAU7I,KAAK6I,oBAAqB9J,I,EAGnEmK,mBAAA,SAAmB2B,GACf,IAAM9L,EAAK8L,EAASC,KAAK,MACnBC,EAAiBF,EAAS/L,KAAK,kBAGjCkB,KAAK6I,oBADLkC,EAC2B,IAAQ/K,KAAK6I,oBAAqB,CAAC9J,IAEnC,IAAUiB,KAAK6I,oBAAqB9J,I,EAIvEiM,iBAAA,SAAiBH,GACb,IAAM9L,EAAK8L,EAASC,KAAK,MAGzB,OAAI,IAAW9K,KAAK6I,oBAAqB9J,IACrCiB,KAAKiL,oBAAoBJ,IAElB,IAGX7K,KAAKkJ,mBAAmB2B,IAEjB,I,EAGXI,oBAAA,SAAoBJ,GAAU,WACpBK,EAAQL,EAAS/L,KAAK,SACtBqM,EAAWzL,IAASkG,SAqB1B,OAnBI5F,KAAKgE,eAAeU,UACpB6F,IAAIC,QAAQW,EAAU,CAClBlH,SAAUjE,KAAKgE,eAAeU,SAC9B0B,OAAQ,CACJgF,SAAUF,KAEf,SAACT,EAAKY,GACL,GAAIZ,EACA,MAAM,IAAIE,MAAMF,GAGpB,EAAK9C,QAAQc,MAAM6C,OACnB,EAAK3D,QAAQgB,WAAY,EACzB,EAAKhB,QAAQc,MAAM8C,cAAcF,MAIzCrL,KAAKkJ,mBAAmB2B,IAEjB,G,EAGXb,iBAAA,SAAiBzI,GACb,IAAMiK,EAASlL,EAAE,iBACXmB,EAAQnB,EAAEiB,EAAM+F,eAAemE,MAAMC,cAE3CF,EAAOzC,MAAK,SAACC,EAAO2C,IAEa,IADhBrL,EAAEqL,GAAS9M,OAAO6M,cACtBE,QAAQnK,GACbnB,EAAEqL,GAASrB,OAEXhK,EAAEqL,GAASjB,W,EAKvBmB,YAAA,SAAYC,GACYA,EAAiBhN,KAAK,uBAE9BwM,Q,EAGhBS,cAAA,SAAcD,GACUA,EAAiBhN,KAAK,uBAE9BkN,S,EAGhBvC,kBAAA,WAAoB,WACUnJ,EAAEN,KAAK2H,QAAQE,yBAEvBkB,MAAK,SAACC,EAAOG,GAC3B,IAAM2C,EAAmBxL,EAAE6I,GAE3B,EAAK4C,cAAcD,O,EAI3BG,gBAAA,WAAkB,WACY3L,EAAEN,KAAK2H,QAAQE,yBAEvBkB,MAAK,SAACC,EAAOG,GAC3B,IAAM2C,EAAmBxL,EAAE6I,GAE3B,EAAK0C,YAAYC,O,EAKzBhD,mBAAA,WACI,GAAsD,IAAlDxI,EAAEN,KAAK2H,QAAQS,wBAAwBpH,OAA3C,CAIA,IAAMU,EAAYwD,cACZgH,EAAY,CACdC,cAAenM,KAAK2H,QAAQO,wBAC5BkE,iBAAkBpM,KAAK2H,QAAQQ,2BAC/BkE,aAAcrM,KAAK2H,QAAQS,uBAC3BkE,iBAAkBtM,KAAK2H,QAAQU,2BAC/BkE,iBAAkBvM,KAAK2H,QAAQW,4BAGnCkE,IAAWC,yBAAyB/K,EAAWwK,GAE/ClM,KAAK0M,oBAAsBhL,I,EAG/B0I,2BAAA,WAA6B,WACP9J,EAAEN,KAAK2H,QAAQM,sBAGvBc,MAAK,SAACC,EAAOC,GACnB,IAAM4B,EAAWvK,EAAE2I,GACblK,EAAK8L,EAASC,KAAK,MACF,IAAW,EAAKjC,oBAAqB9J,GAGxD,EAAKmK,mBAAmB2B,GAExB,EAAKD,iBAAiBC,O,EAKlCV,uBAAA,WAAyB,WACK7J,EAAEN,KAAK2H,QAAQE,yBAEvBkB,MAAK,SAACC,EAAOG,GAC3B,IAAM2C,EAAmBxL,EAAE6I,GAErBpK,EADc+M,EAAiBhN,KAAK,uBACnBwK,SACA,IAAW,EAAKV,gBAAiB7J,GAGpD,EAAKgN,cAAcD,GAEnB,EAAKD,YAAYC,O,EAK7B7B,WAAA,WAEIjK,KAAK2M,eAGLrM,EAAEV,QAAQyB,GAAG,cAAerB,KAAK0J,eACjCpJ,EAAE2F,UAAU5E,GAAG,QAASrB,KAAK2H,QAAQY,uBAAwBvI,KAAK2J,eAClErJ,EAAE2F,UAAU5E,GAAG,qBAAsBrB,KAAK2H,QAAQE,wBAAyB7H,KAAK4J,mBAChFtJ,EAAE2F,UAAU5E,GAAG,QAASrB,KAAK2H,QAAQa,yBAA0BxI,KAAKgK,kBACpE1J,EAAEN,KAAK2H,QAAQI,oBAAoB1G,GAAG,QAASrB,KAAK6J,cAGpDzI,IAAMC,GAAG,8BAA+BrB,KAAK8J,cAC7C1I,IAAMC,GAAG,gCAAiCrB,KAAK+J,eAC/C3I,IAAMC,GAAG,mBAAoBrB,KAAKkB,iB,EAGtCyL,aAAA,WAEIrM,EAAEV,QAAQgN,IAAI,cAAe5M,KAAK0J,eAClCpJ,EAAE2F,UAAU2G,IAAI,QAAS5M,KAAK2H,QAAQY,uBAAwBvI,KAAK2J,eACnErJ,EAAE2F,UAAU2G,IAAI,qBAAsB5M,KAAK2H,QAAQE,wBAAyB7H,KAAK4J,mBACjFtJ,EAAE2F,UAAU2G,IAAI,QAAS5M,KAAK2H,QAAQa,yBAA0BxI,KAAKgK,kBACrE1J,EAAEN,KAAK2H,QAAQI,oBAAoB6E,IAAI,QAAS5M,KAAK6J,cAGrDzI,IAAMwL,IAAI,8BAA+B5M,KAAK8J,cAC9C1I,IAAMwL,IAAI,gCAAiC5M,KAAK+J,eAChD3I,IAAMwL,IAAI,mBAAoB5M,KAAKkB,iB,EAGvC2I,aAAA,SAAatI,GACT,IACM9B,EADQa,EAAEiB,EAAM+F,eACJwD,KAAK,QAEvBvJ,EAAMC,iBACND,EAAMsL,kBAGNnN,IAASa,QAAQd,I,EAGrBkK,cAAA,SAAcpI,GACV,IAAMuL,EAAUxM,EAAEiB,EAAM+F,eAClBuD,EAAWvK,EAAEwM,EAAQhC,KAAK,SAGhCvJ,EAAMC,iBAGNxB,KAAKgL,iBAAiBH,I,EAG1Bf,aAAA,SAAavI,GACT,IAAMwL,EAAQzM,EAAEiB,EAAM+F,eAChB7H,EAAMsN,EAAMjC,KAAK,QAEvBvJ,EAAMC,iBAENuL,EAAMC,YAAY,eAGlBtN,IAASa,QAAQd,GAEbO,KAAK2H,QAAQgB,WACb3I,KAAK2H,QAAQc,MAAMuD,S,EAI3B9K,eAAA,SAAeK,GACX,IAAM9B,EAAMoB,IAAIC,MAAMlB,OAAOC,SAASC,MAAM,GACtCuH,EAAc/G,EAAEiB,EAAM+F,eAAeC,YAAYH,MAAM,KAE7D3H,EAAIgC,MAAM4F,EAAY,IAAMA,EAAY,UACjC5H,EAAIgC,MAAM+F,KAEjBjG,EAAMC,iBAEN9B,IAASa,QAAQM,IAAI2F,OAAO,CAAEX,SAAUpG,EAAIoG,SAAUC,OAAQpG,IAAS+G,iBAAiBhH,EAAIgC,W,EAGhGsI,cAAA,SAAcxI,GAGV,GAFAA,EAAMC,iBAEDxB,KAAK0M,oBAAoBhH,OAAOR,IAAI+H,UAAUC,OAAnD,CAIA,IAAMzN,EAAMoB,IAAIC,MAAMlB,OAAOC,SAASC,MAAM,GACxCuH,EAAc8F,UAAU7M,EAAEiB,EAAM+F,eAAeC,aAAaH,MAAM,KAGtE,IAAK,IAAMT,KAFXU,EAAc3H,IAASuH,iBAAiBI,GAGhCA,EAAYd,eAAeI,KAC3BlH,EAAIgC,MAAMkF,GAAOU,EAAYV,IAIrCjH,IAASa,QAAQM,IAAI2F,OAAO,CAAEX,SAAUpG,EAAIoG,SAAUC,OAAQpG,IAAS+G,iBAAiBhH,EAAIgC,Y,EAGhGiI,cAAA,WACI1J,KAAKqK,c,EAGTT,kBAAA,SAAkBrI,GACd,IACM6H,EADmB9I,EAAEiB,EAAM+F,eACIxI,KAAK,uBACpCC,EAAKqK,EAAYE,SAEnBF,EAAYC,YACZrJ,KAAK4I,gBAAkB,IAAQ5I,KAAK4I,gBAAiB,CAAC7J,IAEtDiB,KAAK4I,gBAAkB,IAAU5I,KAAK4I,gBAAiB7J,I,KAKpD6F,Q","file":"theme-bundle.chunk.11.js","sourcesContent":["import { hooks } from '@bigcommerce/stencil-utils';\nimport CatalogPage from './catalog';\nimport FacetedSearch from './common/faceted-search';\n// import compareProducts from './global/compare-products';\nimport urlUtils from './common/url-utils';\nimport Url from 'url';\nimport collapsibleFactory from './common/collapsible';\nimport 'jstree';\nimport nod from './common/nod';\n\nexport default class Search extends CatalogPage {\n    formatCategoryTreeForJSTree(node) {\n        const nodeData = {\n            text: node.data,\n            id: node.metadata.id,\n            state: {\n                selected: node.selected,\n            },\n        };\n\n        if (node.state) {\n            nodeData.state.opened = node.state === 'open';\n            nodeData.children = true;\n        }\n\n        if (node.children) {\n            nodeData.children = [];\n            node.children.forEach((childNode) => {\n                nodeData.children.push(this.formatCategoryTreeForJSTree(childNode));\n            });\n        }\n\n        return nodeData;\n    }\n\n    showProducts() {\n        const url = urlUtils.replaceParams(window.location.href, {\n            section: 'product',\n        });\n\n        this.$productListingContainer.removeClass('u-hiddenVisually');\n        this.$facetedSearchContainer.removeClass('u-hiddenVisually');\n        this.$contentResultsContainer.addClass('u-hiddenVisually');\n\n        $('[data-content-results-toggle]').removeClass('navBar-action-color--active');\n        $('[data-content-results-toggle]').addClass('navBar-action');\n\n        $('[data-product-results-toggle]').removeClass('navBar-action');\n        $('[data-product-results-toggle]').addClass('navBar-action-color--active');\n\n        urlUtils.goToUrl(url);\n    }\n\n    showContent() {\n        const url = urlUtils.replaceParams(window.location.href, {\n            section: 'content',\n        });\n\n        this.$contentResultsContainer.removeClass('u-hiddenVisually');\n        this.$productListingContainer.addClass('u-hiddenVisually');\n        this.$facetedSearchContainer.addClass('u-hiddenVisually');\n\n        $('[data-product-results-toggle]').removeClass('navBar-action-color--active');\n        $('[data-product-results-toggle]').addClass('navBar-action');\n\n        $('[data-content-results-toggle]').removeClass('navBar-action');\n        $('[data-content-results-toggle]').addClass('navBar-action-color--active');\n\n        urlUtils.goToUrl(url);\n    }\n\n    onReady() {\n        // compareProducts(this.context.urls);\n\n        const $searchForm = $('[data-advanced-search-form]');\n        const $categoryTreeContainer = $searchForm.find('[data-search-category-tree]');\n        const url = Url.parse(window.location.href, true);\n        const treeData = [];\n        this.$productListingContainer = $('#product-listing-container');\n        this.$facetedSearchContainer = $('#faceted-search-container');\n        this.$contentResultsContainer = $('#search-results-content');\n\n        // Init faceted search\n        if ($('#facetedSearch').length > 0) {\n            this.initFacetedSearch();\n        } else {\n            this.onSortBySubmit = this.onSortBySubmit.bind(this);\n            hooks.on('sortBy-submitted', this.onSortBySubmit);\n        }\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        $('[data-product-results-toggle]').on('click', event => {\n            event.preventDefault();\n            this.showProducts();\n        });\n\n        $('[data-content-results-toggle]').on('click', event => {\n            event.preventDefault();\n            this.showContent();\n        });\n\n        if (this.$productListingContainer.find('li.product').length === 0 || url.query.section === 'content') {\n            this.showContent();\n        } else {\n            this.showProducts();\n        }\n\n        const validator = this.initValidation($searchForm)\n            .bindValidation($searchForm.find('#search_query_adv'));\n\n        this.context.categoryTree.forEach((node) => {\n            treeData.push(this.formatCategoryTreeForJSTree(node));\n        });\n\n        this.categoryTreeData = treeData;\n        this.createCategoryTree($categoryTreeContainer);\n\n        $searchForm.on('submit', event => {\n            const selectedCategoryIds = $categoryTreeContainer.jstree().get_selected();\n\n            if (!validator.check()) {\n                return event.preventDefault();\n            }\n\n            $searchForm.find('input[name=\"category\\[\\]\"]').remove();\n\n            for (const categoryId of selectedCategoryIds) {\n                const input = $('<input>', {\n                    type: 'hidden',\n                    name: 'category[]',\n                    value: categoryId,\n                });\n\n                $searchForm.append(input);\n            }\n        });\n    }\n\n    loadTreeNodes(node, cb) {\n        $.ajax({\n            url: '/remote/v1/category-tree',\n            data: {\n                selectedCategoryId: node.id,\n                prefix: 'category',\n            },\n            headers: {\n                'x-xsrf-token': window.BCData && window.BCData.csrf_token ? window.BCData.csrf_token : '',\n            },\n        }).done(data => {\n            const formattedResults = [];\n\n            data.forEach((dataNode) => {\n                formattedResults.push(this.formatCategoryTreeForJSTree(dataNode));\n            });\n\n            cb(formattedResults);\n        });\n    }\n\n    createCategoryTree($container) {\n        const treeOptions = {\n            core: {\n                data: (node, cb) => {\n                    // Root node\n                    if (node.id === '#') {\n                        cb(this.categoryTreeData);\n                    } else {\n                        // Lazy loaded children\n                        this.loadTreeNodes(node, cb);\n                    }\n                },\n                themes: {\n                    icons: true,\n                },\n            },\n            checkbox: {\n                three_state: false,\n            },\n            plugins: [\n                'checkbox',\n            ],\n        };\n\n        $container.jstree(treeOptions);\n    }\n\n    initFacetedSearch() {\n        const $productListingContainer = $('#product-listing-container');\n        const $facetedSearchContainer = $('#faceted-search-container');\n        const $searchHeading = $('#search-results-heading');\n        const $searchCount = $('#search-results-product-count');\n        const productsPerPage = this.context.searchProductsPerPage;\n        const requestOptions = {\n            template: {\n                productListing: 'search/product-listing',\n                sidebar: 'search/sidebar',\n                heading: 'search/heading',\n                productCount: 'search/product-count',\n            },\n            config: {\n                product_results: {\n                    limit: productsPerPage,\n                },\n            },\n            showMore: 'search/show-more',\n        };\n\n        this.facetedSearch = new FacetedSearch(requestOptions, (content) => {\n            $productListingContainer.html(content.productListing);\n            $facetedSearchContainer.html(content.sidebar);\n            $searchHeading.html(content.heading);\n            $searchCount.html(content.productCount);\n\n            $('html, body').animate({\n                scrollTop: 0,\n            }, 100);\n        });\n    }\n\n    initValidation($form) {\n        this.$form = $form;\n        this.validator = nod({\n            submit: $form,\n        });\n\n        return this;\n    }\n\n    bindValidation($element) {\n        if (this.validator) {\n            this.validator.add({\n                selector: $element,\n                validate: 'presence',\n                errorMessage: $element.data('errorMessage'),\n            });\n        }\n\n        return this;\n    }\n\n    check() {\n        if (this.validator) {\n            this.validator.performCheck();\n            return this.validator.areAll('valid');\n        }\n\n        return false;\n    }\n}\n","import Url from 'url';\n\nconst urlUtils = {\n    getUrl: () => `${window.location.pathname}${window.location.search}`,\n\n    goToUrl: (url) => {\n        window.history.pushState({}, document.title, url);\n        $(window).trigger('statechange');\n    },\n\n    replaceParams: (url, params) => {\n        const parsed = Url.parse(url, true);\n        let param;\n\n        // Let the formatter use the query object to build the new url\n        parsed.search = null;\n\n        for (param in params) {\n            if (params.hasOwnProperty(param)) {\n                parsed.query[param] = params[param];\n            }\n        }\n\n        return Url.format(parsed);\n    },\n\n    buildQueryString: (queryData) => {\n        let out = '';\n        let key;\n        for (key in queryData) {\n            if (queryData.hasOwnProperty(key)) {\n                if (Array.isArray(queryData[key])) {\n                    let ndx;\n\n                    for (ndx in queryData[key]) {\n                        if (queryData[key].hasOwnProperty(ndx)) {\n                            out += `&${key}=${queryData[key][ndx]}`;\n                        }\n                    }\n                } else {\n                    out += `&${key}=${queryData[key]}`;\n                }\n            }\n        }\n\n        return out.substring(1);\n    },\n    parseQueryParams: (queryData) => {\n        const params = {};\n\n        for (let i = 0; i < queryData.length; i++) {\n            const temp = queryData[i].split('=');\n\n            if (temp[0] in params) {\n                if (Array.isArray(params[temp[0]])) {\n                    params[temp[0]].push(temp[1]);\n                } else {\n                    params[temp[0]] = [params[temp[0]], temp[1]];\n                }\n            } else {\n                params[temp[0]] = temp[1];\n            }\n        }\n\n        return params;\n    },\n};\n\nexport default urlUtils;\n","import PageManager from './page-manager';\nimport urlUtils from './common/url-utils';\nimport Url from 'url';\n\nexport default class CatalogPage extends PageManager {\n    onSortBySubmit(event) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(event.currentTarget).serialize().split('=');\n\n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n\n        event.preventDefault();\n        window.location = Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) });\n    }\n}\n","import { hooks, api } from '@bigcommerce/stencil-utils';\nimport _ from 'lodash';\nimport Url from 'url';\nimport urlUtils from './url-utils';\nimport modalFactory from '../global/modal';\nimport collapsibleFactory from './collapsible';\nimport { Validators } from './form-utils';\nimport nod from './nod';\n\n/**\n * Faceted search view component\n */\nclass FacetedSearch {\n    /**\n     * @param {object} requestOptions - Object with options for the ajax requests\n     * @param {function} callback - Function to execute after fetching templates\n     * @param {object} options - Configurable options\n     * @example\n     *\n     * let requestOptions = {\n     *      templates: {\n     *          productListing: 'category/product-listing',\n     *          sidebar: 'category/sidebar'\n     *     }\n     * };\n     *\n     * let templatesDidLoad = function(content) {\n     *     $productListingContainer.html(content.productListing);\n     *     $facetedSearchContainer.html(content.sidebar);\n     * };\n     *\n     * let facetedSearch = new FacetedSearch(requestOptions, templatesDidLoad);\n     */\n    constructor(requestOptions, callback, options) {\n        const defaultOptions = {\n            accordionToggleSelector: '#facetedSearch .accordion-navigation, #facetedSearch .facetedSearch-toggle',\n            blockerSelector: '#facetedSearch .blocker',\n            clearFacetSelector: '#facetedSearch .facetedSearch-clearLink',\n            componentSelector: '#facetedSearch-navList',\n            facetNavListSelector: '#facetedSearch .navList',\n            priceRangeErrorSelector: '#facet-range-form .form-inlineMessage',\n            priceRangeFieldsetSelector: '#facet-range-form .form-fieldset',\n            priceRangeFormSelector: '#facet-range-form',\n            priceRangeMaxPriceSelector: '#facet-range-form [name=max_price]',\n            priceRangeMinPriceSelector: '#facet-range-form [name=min_price]',\n            showMoreToggleSelector: '#facetedSearch .accordion-content .toggleLink',\n            facetedSearchFilterItems: '#facetedSearch-filterItems .form-input',\n            modal: modalFactory('#modal')[0],\n            modalOpen: false,\n        };\n\n        // Private properties\n        this.requestOptions = requestOptions;\n        this.callback = callback;\n        this.options = _.extend({}, defaultOptions, options);\n        this.collapsedFacets = [];\n        this.collapsedFacetItems = [];\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        // Init price validator\n        this.initPriceValidator();\n\n        // Show limited items by default\n        $(this.options.facetNavListSelector).each((index, navList) => {\n            this.collapseFacetItems($(navList));\n        });\n\n        // Mark initially collapsed accordions\n        $(this.options.accordionToggleSelector).each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n            const collapsible = $accordionToggle.data('collapsibleInstance');\n\n            if (collapsible.isCollapsed) {\n                this.collapsedFacets.push(collapsible.targetId);\n            }\n        });\n\n        // Collapse all facets if initially hidden\n        // NOTE: Need to execute after Collapsible gets bootstrapped\n        setTimeout(() => {\n            if ($(this.options.componentSelector).is(':hidden')) {\n                this.collapseAllFacets();\n            }\n        });\n\n        // Observe user events\n        this.onStateChange = this.onStateChange.bind(this);\n        this.onToggleClick = this.onToggleClick.bind(this);\n        this.onAccordionToggle = this.onAccordionToggle.bind(this);\n        this.onClearFacet = this.onClearFacet.bind(this);\n        this.onFacetClick = this.onFacetClick.bind(this);\n        this.onRangeSubmit = this.onRangeSubmit.bind(this);\n        this.onSortBySubmit = this.onSortBySubmit.bind(this);\n        this.filterFacetItems = this.filterFacetItems.bind(this);\n\n        this.bindEvents();\n    }\n\n    // Public methods\n    refreshView(content) {\n        if (content) {\n            this.callback(content);\n        }\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        // Init price validator\n        this.initPriceValidator();\n\n        // Restore view state\n        this.restoreCollapsedFacets();\n        this.restoreCollapsedFacetItems();\n\n        // Bind events\n        this.bindEvents();\n    }\n\n    updateView() {\n        $(this.options.blockerSelector).show();\n\n        api.getPage(urlUtils.getUrl(), this.requestOptions, (err, content) => {\n            $(this.options.blockerSelector).hide();\n\n            if (err) {\n                throw new Error(err);\n            }\n\n            // Refresh view with new content\n            this.refreshView(content);\n        });\n    }\n\n    expandFacetItems($navList) {\n        const id = $navList.attr('id');\n\n        // Remove\n        this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\n    }\n\n    collapseFacetItems($navList) {\n        const id = $navList.attr('id');\n        const hasMoreResults = $navList.data('hasMoreResults');\n\n        if (hasMoreResults) {\n            this.collapsedFacetItems = _.union(this.collapsedFacetItems, [id]);\n        } else {\n            this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\n        }\n    }\n\n    toggleFacetItems($navList) {\n        const id = $navList.attr('id');\n\n        // Toggle depending on `collapsed` flag\n        if (_.includes(this.collapsedFacetItems, id)) {\n            this.getMoreFacetResults($navList);\n\n            return true;\n        }\n\n        this.collapseFacetItems($navList);\n\n        return false;\n    }\n\n    getMoreFacetResults($navList) {\n        const facet = $navList.data('facet');\n        const facetUrl = urlUtils.getUrl();\n\n        if (this.requestOptions.showMore) {\n            api.getPage(facetUrl, {\n                template: this.requestOptions.showMore,\n                params: {\n                    list_all: facet,\n                },\n            }, (err, response) => {\n                if (err) {\n                    throw new Error(err);\n                }\n\n                this.options.modal.open();\n                this.options.modalOpen = true;\n                this.options.modal.updateContent(response);\n            });\n        }\n\n        this.collapseFacetItems($navList);\n\n        return false;\n    }\n\n    filterFacetItems(event) {\n        const $items = $('.navList-item');\n        const query = $(event.currentTarget).val().toLowerCase();\n\n        $items.each((index, element) => {\n            const text = $(element).text().toLowerCase();\n            if (text.indexOf(query) !== -1) {\n                $(element).show();\n            } else {\n                $(element).hide();\n            }\n        });\n    }\n\n    expandFacet($accordionToggle) {\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n\n        collapsible.open();\n    }\n\n    collapseFacet($accordionToggle) {\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n\n        collapsible.close();\n    }\n\n    collapseAllFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n\n            this.collapseFacet($accordionToggle);\n        });\n    }\n\n    expandAllFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n\n            this.expandFacet($accordionToggle);\n        });\n    }\n\n    // Private methods\n    initPriceValidator() {\n        if ($(this.options.priceRangeFormSelector).length === 0) {\n            return;\n        }\n\n        const validator = nod();\n        const selectors = {\n            errorSelector: this.options.priceRangeErrorSelector,\n            fieldsetSelector: this.options.priceRangeFieldsetSelector,\n            formSelector: this.options.priceRangeFormSelector,\n            maxPriceSelector: this.options.priceRangeMaxPriceSelector,\n            minPriceSelector: this.options.priceRangeMinPriceSelector,\n        };\n\n        Validators.setMinMaxPriceValidation(validator, selectors);\n\n        this.priceRangeValidator = validator;\n    }\n\n    restoreCollapsedFacetItems() {\n        const $navLists = $(this.options.facetNavListSelector);\n\n        // Restore collapsed state for each facet\n        $navLists.each((index, navList) => {\n            const $navList = $(navList);\n            const id = $navList.attr('id');\n            const shouldCollapse = _.includes(this.collapsedFacetItems, id);\n\n            if (shouldCollapse) {\n                this.collapseFacetItems($navList);\n            } else {\n                this.expandFacetItems($navList);\n            }\n        });\n    }\n\n    restoreCollapsedFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n            const collapsible = $accordionToggle.data('collapsibleInstance');\n            const id = collapsible.targetId;\n            const shouldCollapse = _.includes(this.collapsedFacets, id);\n\n            if (shouldCollapse) {\n                this.collapseFacet($accordionToggle);\n            } else {\n                this.expandFacet($accordionToggle);\n            }\n        });\n    }\n\n    bindEvents() {\n        // Clean-up\n        this.unbindEvents();\n\n        // DOM events\n        $(window).on('statechange', this.onStateChange);\n        $(document).on('click', this.options.showMoreToggleSelector, this.onToggleClick);\n        $(document).on('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\n        $(document).on('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\n        $(this.options.clearFacetSelector).on('click', this.onClearFacet);\n\n        // Hooks\n        hooks.on('facetedSearch-facet-clicked', this.onFacetClick);\n        hooks.on('facetedSearch-range-submitted', this.onRangeSubmit);\n        hooks.on('sortBy-submitted', this.onSortBySubmit);\n    }\n\n    unbindEvents() {\n        // DOM events\n        $(window).off('statechange', this.onStateChange);\n        $(document).off('click', this.options.showMoreToggleSelector, this.onToggleClick);\n        $(document).off('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\n        $(document).off('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\n        $(this.options.clearFacetSelector).off('click', this.onClearFacet);\n\n        // Hooks\n        hooks.off('facetedSearch-facet-clicked', this.onFacetClick);\n        hooks.off('facetedSearch-range-submitted', this.onRangeSubmit);\n        hooks.off('sortBy-submitted', this.onSortBySubmit);\n    }\n\n    onClearFacet(event) {\n        const $link = $(event.currentTarget);\n        const url = $link.attr('href');\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        // Update URL\n        urlUtils.goToUrl(url);\n    }\n\n    onToggleClick(event) {\n        const $toggle = $(event.currentTarget);\n        const $navList = $($toggle.attr('href'));\n\n        // Prevent default\n        event.preventDefault();\n\n        // Toggle visible items\n        this.toggleFacetItems($navList);\n    }\n\n    onFacetClick(event) {\n        const $link = $(event.currentTarget);\n        const url = $link.attr('href');\n\n        event.preventDefault();\n\n        $link.toggleClass('is-selected');\n\n        // Update URL\n        urlUtils.goToUrl(url);\n\n        if (this.options.modalOpen) {\n            this.options.modal.close();\n        }\n    }\n\n    onSortBySubmit(event) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(event.currentTarget).serialize().split('=');\n\n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n\n        event.preventDefault();\n\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) }));\n    }\n\n    onRangeSubmit(event) {\n        event.preventDefault();\n\n        if (!this.priceRangeValidator.areAll(nod.constants.VALID)) {\n            return;\n        }\n\n        const url = Url.parse(window.location.href, true);\n        let queryParams = decodeURI($(event.currentTarget).serialize()).split('&');\n        queryParams = urlUtils.parseQueryParams(queryParams);\n\n        for (const key in queryParams) {\n            if (queryParams.hasOwnProperty(key)) {\n                url.query[key] = queryParams[key];\n            }\n        }\n\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) }));\n    }\n\n    onStateChange() {\n        this.updateView();\n    }\n\n    onAccordionToggle(event) {\n        const $accordionToggle = $(event.currentTarget);\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n        const id = collapsible.targetId;\n\n        if (collapsible.isCollapsed) {\n            this.collapsedFacets = _.union(this.collapsedFacets, [id]);\n        } else {\n            this.collapsedFacets = _.without(this.collapsedFacets, id);\n        }\n    }\n}\n\nexport default FacetedSearch;\n"],"sourceRoot":""}